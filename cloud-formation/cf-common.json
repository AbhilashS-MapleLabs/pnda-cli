{
  "Description" : "AWS CloudFormation Template for PNDA. Creates a VPC with Public IP subnets.",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters" : {
    "pndaCluster" : {
      "Type" : "String",
      "Default" : "pnda",
      "Description" : "Name for this cluster"
    },
    "awsAvailabilityZone" : {
      "Type" : "String",
      "Default" : "eu-west-1a",
      "Description" : "Availability Zone for subnet"
    },
    "whitelistSshAccess" : {
      "Type" : "String",
      "Default" : "0.0.0.0/0",
      "Description" : "Whitelist for external access to ssh"
    },
    "whitelistKafkaAccess" : {
      "Type" : "String",
      "Default" : "0.0.0.0/0",
      "Description" : "Whitelist for external access to Kafka"
    },
    "whitelistUserAccess" : {
      "Type" : "String",
      "Default" : "0.0.0.0/0",
      "Description" : "Whitelist for external access to Gateway"
    },
    "imageId" : {
      "Type" : "String",
      "Default" : "ami-f95ef58a",
      "Description" : "Image to use for instances"
    },
    "keyName" : {
      "Type" : "String",
      "Default" : "keyname",
      "Description" : "Keypair to enable for ssh access to instances"
    },
    "dhcpDomain" : {
      "Type" : "String",
      "Default" : "eu-west-1.compute.internal",
      "Description" : "Domain name for instances"
    },
    "logVolumeSizeGb" : {
      "Type" : "String",
      "Default" : "120",
      "Description" : "Size in GB for the log volume"
    },
    "networkCidr" : {
      "Type" : "String",
      "Default" : "10.0.0.0/16",
      "Description" : "CIDR specifying the address range for the VPC"
    },
    "publicSubnetCidr" : {
      "Type" : "String",
      "Default" : "10.0.0.0/24",
      "Description" : "CIDR specifying the address range for the public subnet"
    },
    "privateSubnetCidr" : {
      "Type" : "String",
      "Default" : "10.0.1.0/24",
      "Description" : "CIDR specifying the address range for the private subnet"
    },
    "privateSubnetGateway" : {
      "Type" : "String",
      "Default" : "10.0.1.1",
      "Description" : "Gateway on private subnet"
    }
  },

  "Resources": {
    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "CidrBlock" : { "Ref" : "networkCidr" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "PublicSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "publicSubnetCidr" },
        "AvailabilityZone" : {"Ref": "awsAvailabilityZone"},
        "Tags" : [
          { "Key" : "Name", "Value" :  {"Fn::Join" : [ "-", [ {"Ref": "AWS::StackName"}, "PublicSubnet" ] ]} },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "PrivateSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "privateSubnetCidr" },
        "AvailabilityZone" : {"Ref": "awsAvailabilityZone"},
        "Tags" : [
          { "Key" : "Name", "Value" :  {"Fn::Join" : [ "-", [ {"Ref": "AWS::StackName"}, "PrivateSubnet" ] ]} },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private" }
        ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key" : "Name", "Value" :  {"Fn::Join" : [ "-", [ {"Ref": "AWS::StackName"}, "InternetGateway" ] ]} },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "GatewayToInternet" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Name", "Value" :  {"Fn::Join" : [ "-", [ {"Ref": "AWS::StackName"}, "PublicRouteTable" ] ]} },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "PublicRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "GatewayToInternet",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "PublicSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "PrivateRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Name", "Value" :  {"Fn::Join" : [ "-", [ {"Ref": "AWS::StackName"}, "PrivateRouteTable" ] ]} },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private" }
        ]
      }
    },

    "PrivateRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NAT" }
      }
    },

    "PrivateSubnetRouteTableAssociation" : {
         "Type" : "AWS::EC2::SubnetRouteTableAssociation",
         "Properties" : {
            "SubnetId" : { "Ref" : "PrivateSubnet" },
            "RouteTableId" : { "Ref" : "PrivateRouteTable" }
         }
    },

    "PublicNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Name", "Value" :  {"Fn::Join" : [ "-", [ {"Ref": "AWS::StackName"}, "PublicNetworkAcl" ] ]} },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },
    
    "InboundHTTPPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "80", "To" : "80" }
      }
    },

    "InboundHTTPSPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "101",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "443", "To" : "443" }
      }
    },

    "InboundSSHPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "102",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "22", "To" : "22" }
      }
    },

    "InboundNtpPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "103",
        "Protocol" : "17",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Ref" : "whitelistSshAccess" },
        "PortRange" : { "From" : "123", "To" : "123" }
      }
    },

    "InboundEphemeralPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "104",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "1024", "To" : "65535" }
      }
    },

    "InboundEphemeralUdpPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "105",
        "Protocol" : "17",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "1024", "To" : "65535" }
      }
    },

    "InboundDnsPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "106",
        "Protocol" : "17",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Ref" : "whitelistSshAccess" },
        "PortRange" : { "From" : "53", "To" : "53" }
      }
    },

    "OutboundPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "OutboundPublicNetworkUdpAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "101",
        "Protocol" : "17",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "PublicSubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },

    "NAT" : {
      "DependsOn" : "GatewayToInternet",
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : ["EIP", "AllocationId"]},
        "SubnetId" : { "Ref" : "PublicSubnet"},
        "Tags" : [
          { "Key" : "Name", "Value" :  {"Fn::Join" : [ "-", [ {"Ref": "AWS::StackName"}, "NAT" ] ]} },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } }
        ]
      }
    },

    "EIP" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },

    "kafkaSg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "access to Kafka",
        "VpcId": {"Ref": "VPC"},
        "Tags" : [
          { "Key" : "Name", "Value" :  {"Fn::Join" : [ "-", [ {"Ref": "AWS::StackName"}, "kafkaSg" ] ]} },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } }
        ]
      }
    },

    "ingressKafka1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "kafkaSg"
        },
        "IpProtocol": "tcp",
        "FromPort": "9090",
        "ToPort": "9100",
        "CidrIp": { "Ref" : "whitelistKafkaAccess" }
      }
    },

    "gatewaySg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "access to pnda instances",
        "VpcId": {"Ref": "VPC"},
        "Tags" : [
          { "Key" : "Name", "Value" :  {"Fn::Join" : [ "-", [ {"Ref": "AWS::StackName"}, "gatewaySg" ] ]} },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } }
        ]
      }
    },

    "ingressGWSsh": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "gatewaySg"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": { "Ref" : "whitelistSshAccess" }
      }
    },

    "ingressGWKnox": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "gatewaySg"
        },
        "IpProtocol": "tcp",
        "FromPort": "8443",
        "ToPort": "8443",
        "CidrIp": { "Ref" : "whitelistUserAccess" }
      }
    },

    "ingressGWHAProxy": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "gatewaySg"
        },
        "IpProtocol": "tcp",
        "FromPort": "8444",
        "ToPort": "8444",
        "CidrIp": { "Ref" : "whitelistUserAccess" }
      }
    },
    
    "pndaSg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "access to pnda UIs",
        "VpcId": {"Ref": "VPC"},
        "Tags" : [
          { "Key" : "Name", "Value" :  {"Fn::Join" : [ "-", [ {"Ref": "AWS::StackName"}, "pndaSg" ] ]} },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } }
        ]
      }
    },

    "ingressPndaSsh": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "pndaSg"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": { "Ref" : "whitelistSshAccess" }
      }
    },

    "ingressPndaPnda": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "pndaSg"
        },
        "IpProtocol": "-1",
        "FromPort": "0",
        "ToPort": "65535",
        "SourceSecurityGroupId": { "Ref" : "pndaSg" }
      }
    },

    "ingressPndaGateway": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "pndaSg"
        },
        "IpProtocol": "-1",
        "FromPort": "0",
        "ToPort": "65535",
        "SourceSecurityGroupId": { "Ref" : "gatewaySg" }
      }
    },

    "ingressGatewayPnda": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "gatewaySg"
        },
        "IpProtocol": "-1",
        "FromPort": "0",
        "ToPort": "65535",
        "SourceSecurityGroupId": { "Ref" : "pndaSg" }
      }
    },

    "egressAll": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "pndaSg"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  }
}
