# Definition for the mgr1 instance type
# Specifies which bootstrap script to run to set up this instance type and which roles
# to apply to this instance type

heat_template_version: 2015-04-30

parameters:
  Flavor:
    description: Flavor of the manager1 server
    type: string
    default: ec2.m3.2xlarge
  KeyName:
    description: Name of an existing ssh keypair
    type: string
  pnda_private_network:
    description: Private network for pnda deployment
    type: string
  pnda_private_subnet:
    description: Private network for pnda deployment
    type: string
  Image:
    type: string
  name:
    type: string
  cluster_name:
    type: string
  pnda_security_group_pnda:
    type: string
  pnda_flavor:
    type: string
    default: standard
  logvolume_size:
    type: number
    default: 120
  signal_transport:
    type: string
    default: TEMP_URL_SIGNAL
  software_config_transport:
    type: string
    default: POLL_TEMP_URL

resources:
  mgr1_sec_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: CM SecurityGroup
      name:
        str_replace:
          template:
            cname-hadoop-mgr1
          params:
            cname: { get_param: cluster_name }
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp

  mgr1_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: pnda_private_network  }
      fixed_ips:
        - subnet_id: { get_param: pnda_private_subnet  }
      security_groups: [{ get_resource: mgr1_sec_group }, { get_param: pnda_security_group_pnda  }]

  logvolume:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: logvolume_size }
      description: Volume for manager1 logs

  logvolume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: logvolume }
      instance_uuid: { get_resource: mgr1_server }


  mgr1_server:
    type: OS::Nova::Server
    properties:
      name: { get_param: name }
      image: { get_param: Image }
      flavor: { get_param: Flavor}
      key_name: { get_param: KeyName }
      networks:
        - port: { get_resource: mgr1_port }

outputs:
  server_resource:
    description: Heat resource handle for the Nova compute server
    value:
      {get_resource: mgr1_server}
