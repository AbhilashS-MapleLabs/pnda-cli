# Definition for the edge instance type
# Specifies which bootstrap script to run to set up this instance type and which roles
# to apply to this instance type

# It is processed as a jinja2 template with the following parameters:
#   - create_network: 0|1. Set to 1 to create network related resources or to 0 when running
#                          for an openstack ironic bare-metal install

heat_template_version: 2015-04-30

parameters:
  Flavor:
    description: Flavor of the edge server
    type: string
    default: ec2.m3.xlarge
  KeyName:
    description: Name of an existing ssh keypair
    type: string
  pnda_private_network:
    description: Private network for pnda deployment
    type: string
  pnda_private_subnet:
    description: Private network for pnda deployment
    type: string
  pnda_security_group_pnda:
    type: string
  Image:
    type: string
  name:
    type: string
  NodeIndex:
    type: number
    default: 0
  cluster_name:
    type: string
  pnda_flavor:
    type: string
    default: standard
  logvolume_size:
    type: number
    default: 10
  signal_transport:
    type: string
    default: TEMP_URL_SIGNAL
  software_config_transport:
    type: string
    default: POLL_TEMP_URL

resources:
  edge_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: pnda_private_network }
      fixed_ips:
        - subnet_id: { get_param: pnda_private_subnet }
      security_groups: [{ get_param: pnda_security_group_pnda }]

  logvolume:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: logvolume_size }
      description: Volume for edge logs
  logvolume_attachment:
    type: OS::Cinder::VolumeAttachment
    depends_on: [ edge_server ]
    properties:
      volume_id: { get_resource: logvolume }
      instance_uuid: { get_resource: edge_server }

  edge_server:
    type: OS::Nova::Server
    depends_on: [ edge_port ]
    properties:
      name: { get_param: name }
      image: { get_param: Image }
      flavor: { get_param: Flavor }
      key_name: { get_param: KeyName }
      metadata: {'node_type': 'hadoop-edge',
                 'pnda_cluster': {get_param: cluster_name},
                 'node_idx':'',
                 'Name': {get_param: name}}
      networks:
        - port: { get_resource: edge_port }

outputs:
  port_resource:
    description: Heat resource handle for the Neutron port
    value:
      { get_resource: edge_port }
  server_resource:
    description: Heat resource handle for the Nova compute server
    value:
      {get_resource: edge_server}
  hosts_entry:
    description: >
      Server's IP address and hostname in the /etc/hosts format
    value:
      str_replace:
        template: |
          PRIMARYIP PRIMARYHOST
        params:
          PRIMARYIP: {get_attr: [edge_server, first_address]}
          PRIMARYHOST: {get_attr: [edge_server, name]}
